Совместимость с Java.
Статические гарантии корректности.
быстрый компилятор
Лаконичность.
Доступность для изучения.
Инструментальная поддержка.

свободные Функции
Переменные
Классы
Трейты
extension function — «функция-расширение»
Система типов
	Нулевые ссылки.
	Автоматическое приведение типа.
	Обобщенные типы, вариантность.
Функции высших порядков
Предметно-ориентированные языки
------

Ключевые возможности Kotlin:
полная совместимость с Java в обе стороны, то есть код на Java и Kotlin можно безболезненно смешивать в одном проекте;

большая безопасность по сравнению с Java (проверка на рапространенные ошибки, например, обращение по нулевой ссылке);

автоматический вывод типов переменных;

функции высших порядков позволяют писать более компактный код и создавать проблемно-ориентированные языки (DSL);

<<функции раширения>> (extension function) позволяют расширять интерфейс существующих классов и придерживаться лучшей модульности при написании нового кода;

гибкая система типов;

конструкции, сокращаяющие лишние повторения кода: свойства, значения параметров по умолчанию, мульти-присваивания, классы данных, автоматическое приведение типов и пр.

Kotlin разрабатывается в JetBrains с 2010 года, с 2011 года исходный код распространяется по свободной лицензии Apache 2. На данный момент доступны для скачивания промежуточные версии компилятора и плагина к IntelliJ IDEA. Онлайн-демо позволяет попробовать Kotlin прямо в браузере: в редакторе есть подсветка синтаксиса и ошибок, автодополнение, а так же возможность запустить написанную программу.

- Более лаконичный и выразительный синтаксис.
- Возможность обнаружить большее количество проблем на стадии компиляции
(более безопасная система типов).
- Более полная поддержка множественного наследования.
- Поддержка функций высших порядков и замыканий.

На фоне полной совместимости с Java, Kotlin предоставляет дополнительные языковые возможности, призванные упростить повседневную работу программистов и повысить их продуктивность. Наряду с лаконичностью, выразительностью, и производительностью, Kotlin сочетает в себе простоту в изучении.


Kotlin[5] – один из нескольких новых развивающихся языков программирования для платформы JVM. Он имеет статическую типизацию и поддерживает объектно- ориентированную и функциональную парадигмы. Kotlin был анонсирован компанией JetBrains в июле 2011года, а в июне 2012 года была выпущена версия M2. Отличительной особенностью Kotlin является его полная совместимость с языком Java. Проведем сравнение нашего решения с уже существующими продуктами, упомянутыми в 2.2. 
Согласно[13], к преимуществам разработки на языке Kotlin по сравнению с Java и
соответственно каркасом GWT можно отнести:
-Более лаконичный и выразительный синтаксис.
-Возможность обнаружить большее количество проблем на стадии компиляции
(более безопасная система типов).
- Более полная поддержка множественного наследования.
- Поддержка функций высших порядков и замыканий.
- Локальный вывод типов.

По сравнению с языками Dart и CoffeeScript основным преимуществом Kotlin
является статическая типизация, которая в частности означает возможность более полной
поддержки в интегрированных средах разработки.
Из перечисленных выше языков наиболее близким к Kotlin языком является Haxe,
однако Haxe за более чем 5 лет своего существования так и
не получил большого
распространения за исключением разработки для платформы Flash. (Автор предполагает, что
одними из причин непопулярности Haxe являются отсутствие поддержки хотя бы одной из
наиболее популярных платформ, CLR (Common Language Runtime[14]) или JVM, и
отсутствие качественной поддержки в интегрированных средах разработки).